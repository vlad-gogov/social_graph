Задача:

Необходимо написать структуру данных для социального графа, чтобы эффективно выполнять следущие запросы:
- addUser: добавление пользователя
- addFriend: добавление друга пользователю
- getUser: получение пользователя по id
- findUsers: поиск среди всех пользователей 
с заданными фильтрами (каждый фильтр может быть включен или выключен в зависимости от поля <active>)

Поддерживаемые фильры:
- NameFilter: оставляет только пользователей с именем <name>
- AgeFilter: оставляет только пользователей с возрастом в диапазоне от <start> до <end>
- GenderFilter: оставляет только пользователей с заданным полом
- CityFilter: оставляет только пользователей живущих в одном из городов, указанных в <cities>

Так же поддерживается несколько видов сортировок пользователей
- SortBy_DontSort - сортировка не используется
- SortBy_Name: - сортировка по имени в лексикографическом порядке
- SortBy_Age: - сортировка по возрасту
- SortBy_Relevance: - сортировка по количеству общих друзей

Поле limit ограничивает количество записей в результате заданным числом.
Например при limit = 10, в результате должно оказаться 10 верхних записей в порядке сортировки, подходящих под заданные фильтры.
Если записей меньше, чем limit, то необходимо вывести все подходящие записи.

Всю задачу нужно сделать в файле fast_social_graph.h

В файле social_graph.h содержится интерфейс, который необходимо реализовать

В файле dummy_graph.h содержится базовая реализация, которую нужно оптимизировать.

В файле main.cpp - бенчмарк

Остальные файлы можно не смотреть, там ничего интересного :)
